<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
         http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
         http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">


	<!-- By default, Spring looks for your Spring beans in a file  servlet config mvc.xml-->

	<!-- Use "<mvc:annotation-driven/>" in the spring configuration file instead 
		of writing your own implementation of WebMvcConfigurationSupport -->
	
	<!-- Enables the Spring MVC @Controller programming model.
	let Controller servlet know that annotations will be used for bean configurations. -->
	<mvc:annotation-driven ignore-default-model-on-redirect="true"/>
	
	<!-- context:component-scan element is used to provide the base-package location for scanning Controller classes.  -->
	<context:component-scan base-package="imic.springmvc.*" />

	
	<!-- 3. view resolver is responsible for 
	translating the view name in the ModelAndView into a component, such as a JSP, that renders the view .
	 we can provide view pages location through prefix and suffix properties-->
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<set>
				<ref bean="spitterFormatter" />
			</set>
		</property> 
	
	</bean>-->

</beans>